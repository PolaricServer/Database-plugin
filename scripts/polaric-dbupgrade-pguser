#!/bin/bash

   DBNAME=polaric
 USERNAME=polaric



# We have to be the postgres user
if [ $(whoami) != "postgres" ]; then
    echo "ERROR: This script must be run as the 'postgres' user"
    exit 1
fi




VERSION=$(psql -t -c 'select version from "MetaData"' polaric | xargs)

echo "Version is $VERSION"
if ((VERSION < 2)); then
    echo "Upgrading schema to version 2"
    
    psql -t -c "BEGIN;  \
        CREATE TABLE \"ObjectAccess\" ( \
        id  integer REFERENCES \"JsObject\" (id) ON DELETE CASCADE, \
        readonly boolean DEFAULT 'false', \
        userid  varchar(20) ); \
        \
        INSERT INTO \"ObjectAccess\" ( id, userid, readonly) \
        SELECT id, userid, 'false' FROM \"JsObject\"; \
        \
        ALTER TABLE \"JsObject\" DROP COLUMN \"userid\"; \
        ALTER TABLE \"ObjectAccess\" owner TO polaric; \
        UPDATE \"MetaData\" SET version=2; \
        COMMIT " polaric
fi

if ((VERSION < 3)); then
    echo "Upgrading schema to version 3"
    
    psql -t -c "BEGIN;  \
        DROP TABLE \"FileObject\"; \
        UPDATE \"MetaData\" SET version=3; \
        COMMIT " polaric
fi

if ((VERSION < 4)); then
    echo "Upgrading schema to version 4"
    
    psql -t -c "BEGIN;  \
        CREATE TABLE \"TrTags\" ( \
        userid  varchar(20) NOT NULL, \
        tag varchar(20) NOT NULL ); \
        ALTER TABLE \"TrTags\" owner to polaric; \
        CREATE INDEX aprspacket_src_time_idx on \"AprsPacket\" (src, time); \
        UPDATE \"MetaData\" SET version=4; \
        COMMIT " polaric
fi


if ((VERSION < 5)); then
    echo "Upgrading schema to version 5"
    
    psql -t -c "BEGIN; \
        CREATE TABLE \"DbSync\" ( \
         cid varchar NOT NULL, \
         item varchar NOT NULL, \
         ts timestamp without time zone NOT NULL, \
         PRIMARY KEY (cid,item) ); \
        \
        CREATE TABLE \"DbSyncQueue\" ( \
         peer varchar NOT NULL, \
         cid varchar NOT NULL, \
         item varchar NOT NULL, \
         userid varchar, \
         ts timestamp without time zone NOT NULL, \
         cmd varchar, \
         arg text, \
         PRIMARY KEY (cid,item,ts) ); \
        \
        UPDATE \"MetaData\" SET version=5; \
        ALTER TABLE \"DbSync\" owner to polaric; \
        ALTER TABLE \"DbSyncQueue\" owner to polaric; \
        \
        ALTER TABLE \"Signs\" ALTER COLUMN id DROP DEFAULT; \
        ALTER TABLE \"Signs\" ALTER COLUMN id TYPE varchar; \
        DROP SEQUENCE \"Signs_id_seq\"; \
        CREATE SEQUENCE signs_seq START WITH 2000; \
        ALTER SEQUENCE signs_seq OWNER TO polaric; \
        COMMIT " polaric
fi


if ((VERSION < 6)); then
    echo "Upgrading schema to version 6"
    
    psql -t -c "BEGIN;  \
        CREATE TABLE \"ServerStats\" ( \
        time timestamp WITHOUT TIME ZONE NOT NULL, \
        nclients integer, \
        nloggedin integer, \
        httpreq integer, \
        visits integer, \
        logins integer, \
        posupdates integer, \
        aprsposupdates integer, \
        mapupdates integer ); \
        \
        CREATE TABLE \"ServerStart\" ( \
        time timestamp WITHOUT TIME ZONE NOT NULL ); \
        \
        CREATE VIEW \"ServerStatsPerDay\" AS \
        SELECT date_trunc('day', time) day, sum(httpreq) httpreq, \
           sum(visits) visits, sum(logins) logins, sum(posupdates) posupdates, \
           sum(aprsposupdates) aprsposupdates, sum(mapupdates) mapupdates \
        FROM \"ServerStats\" GROUP BY day; \
        \
        ALTER TABLE \"ServerStats\" owner to polaric; \
        ALTER TABLE \"ServerStart\" owner to polaric; \
        UPDATE \"MetaData\" SET version=6; \
        COMMIT " polaric
fi


if ((VERSION < 7)); then
    echo "Upgrading schema to version 7"
    psql -t -c "BEGIN;  \
        ALTER TABLE \"JsObject\" ALTER COLUMN id DROP DEFAULT; \
        ALTER TABLE \"ObjectAccess\" DROP CONSTRAINT \"ObjectAccess_id_fkey\"; \
        ALTER TABLE \"ObjectAccess\" ALTER COLUMN id TYPE varchar; \
        ALTER TABLE \"JsObject\" ALTER COLUMN id TYPE varchar; \
        ALTER TABLE \"ObjectAccess\" ADD FOREIGN KEY(id) REFERENCES \"JsObject\"(id) ON DELETE CASCADE; \
        DROP SEQUENCE IF EXISTS \"JsObject_id_seq\"; \
        CREATE SEQUENCE IF NOT EXISTS jsobject_seq START WITH 5000; \
        ALTER SEQUENCE jsobject_seq OWNER TO polaric; \
        \
        DELETE FROM \"DbSync\"; \
        ALTER TABLE \"DbSync\" ADD COLUMN IF NOT EXISTS op varchar(10) NOT NULL; \
        ALTER TABLE \"DbSync\" DROP CONSTRAINT \"DbSync_pkey\"; \
        DELETE FROM \"DbSync\" WHERE op IS null; \
        ALTER TABLE \"DbSyncQueue\" ADD COLUMN IF NOT EXISTS origin varchar; \
        ALTER TABLE \"DbSyncQueue\" RENAME COLUMN peer to nodeid; \
        ALTER TABLE \"DbSyncQueue\" DROP CONSTRAINT \"DbSyncQueue_pkey\"; \
        \
        UPDATE \"MetaData\" SET version=7; \
        COMMIT " polaric
fi


if ((VERSION < 8)); then
    echo "Upgrading schema to version 8"
    psql -t -c "BEGIN;  \
        DROP TABLE IF EXISTS \"Mission\"; \
        DROP TABLE IF EXISTS \"RtPoint\"; \
        DROP TABLE IF EXISTS \"SysObject\"; \
        DROP INDEX IF EXISTS geoindex_rt; \
        CREATE TABLE IF NOT EXISTS \"Annotation\" ( \
          src varchar(20) not null, \
          alias varchar(30) default null, \
          icon varchar default null, \
          tag varchar default null, \
          tstart timestamp without time zone not null, \
          tend timestamp without time zone ); \
        \
        ALTER TABLE \"Annotation\" owner to polaric; \
        CREATE INDEX IF NOT EXISTS annotation_idx ON \"Annotation\" (src,tstart); \
        UPDATE \"MetaData\" SET version=8; \
        \
        COMMIT " polaric
fi


if ((VERSION < 9)); then
    echo "Upgrading schema to version 9"
    psql -t -c "BEGIN;  \
    CREATE TABLE IF NOT EXISTS \"DbSyncPeers\" ( \
       nodeid varchar not null PRIMARY KEY, \
       url varchar, \
       item varchar not null ); \
    \
    ALTER TABLE \"DbSyncPeers\" owner to polaric; \
    UPDATE \"MetaData\" SET version=9; \
    \
    COMMIT " polaric
fi


if ((VERSION < 10)); then
    echo "Upgrading schema to version 10"
    psql -t -c "BEGIN;  \
    CREATE TABLE IF NOT EXISTS \"Photo\" ( \
        id varchar NOT NULL, \
        userid varchar(20) NOT NULL, \
        time timestamp without time zone NOT NULL, \
        descr text, \
        image bytea ); \
    \
    SELECT AddGeometryColumn('Photo', 'position', 4326, 'POINT', 2); \
    ALTER TABLE \"ObjectAccess\" ADD COLUMN photo boolean DEFAULT 'false'; \
    ALTER TABLE \"ObjectAccess\" DROP CONSTRAINT \"ObjectAccess_id_fkey\"; \
    UPDATE \"MetaData\" SET version=10; \
    \
    COMMIT " polaric
fi


if ((VERSION < 11)); then
    echo "Upgrading schema to version 11"
    psql -t -c "BEGIN;  \
    alter table \"JsObject\" alter column tag type varchar(40); \
    alter table \"TrTags\" alter column tag type varchar(40); \
    UPDATE \"MetaData\" SET version=11; \
    COMMIT " polaric
fi 



if ((VERSION < 12)); then
    echo "Upgrading schema to version 12"
    psql -t -c "BEGIN;  \
    CREATE TABLE IF NOT EXISTS \"DbSyncMessage\" ( \
        origin varchar NOT NULL, \
        ts timestamp without time zone NOT NULL, \
        cid varchar NOT NULL, \
        item varchar NOT NULL, \
        userid varchar, \
        cmd varchar, \
        arg text, \
        PRIMARY KEY (origin, ts)); \
    \
    CREATE TABLE IF NOT EXISTS \"DbSyncMessageTo\" ( \
        origin varchar NOT NULL, \
        ts timestamp without time zone NOT NULL, \
        nodeid varchar NOT NULL, \
        sent boolean DEFAULT 'false', \
        PRIMARY KEY (origin,ts, nodeid), \
        FOREIGN KEY (origin, ts) REFERENCES \"DbSyncMessage\" (origin, ts) ON DELETE CASCADE ); \
    \
    CREATE TABLE IF NOT EXISTS \"DbSyncAck\" ( \
        origin varchar NOT NULL, \
        ts timestamp without time zone NOT NULL, \
        nodeid varchar NOT NULL, \
        conf boolean, \
        PRIMARY KEY (origin, ts)); \
    \
    CREATE TABLE IF NOT EXISTS \"DbSyncIncoming\" ( \
        source varchar not null, \
        origin varchar not null, \
        ts timestamp without time zone not null, \
        primary key (origin,ts)); \
    \
    INSERT INTO \"DbSyncMessage\" \
        SELECT DISTINCT origin, ts, cid, item, userid, cmd, arg \
        FROM \"DbSyncQueue\"; \
    \
    INSERT INTO \"DbSyncMessageTo\" \
        SELECT DISTINCT origin, ts, nodeid FROM \"DbSyncQueue\"; \
    \
    DROP TABLE IF EXISTS \"DbSyncQueue\"; \
    alter table \"DbSyncMessage\" owner to polaric; \
    alter table \"DbSyncMessageTo\" owner to polaric; \
    \
    UPDATE \"MetaData\" SET version=12; \
    COMMIT " polaric
fi 


if ((VERSION < 13)); then
    echo "Upgrading schema to version 13"
    psql -t -c "BEGIN;  \
    CREATE INDEX IF NOT EXISTS posreport_src_time_idx ON \"PosReport\" (src, time); \
    UPDATE \"MetaData\" SET version=13; \
    COMMIT " polaric
fi 


if ((VERSION < 14)); then
    echo "Upgrading schema to version 14"
    psql -t -c "BEGIN;  \
    CREATE INDEX IF NOT EXISTS aprspacket_time_idx ON \"AprsPacket\" (time); \
    CREATE INDEX IF NOT EXISTS aprspacket_src_time_idx ON \"AprsPacket\" (src, time); \
    UPDATE \"MetaData\" SET version=14; \
    COMMIT " polaric
fi 



NSCLASS=$(psql -t -c 'select count(*) from "SignClass"' polaric | xargs)
if ((NSCLASS == 0)); then
    echo "Adding classes/icons in \"SignClass\""
    echo "NOTE: You may change/add classes in the PostgreSQL database"
    psql -t -c "BEGIN; \
        INSERT INTO \"SignClass\" (id,name,icon) values (0, 'Default', 'signs/point.png'); \
        INSERT INTO \"SignClass\" (id,name,icon) values (1, 'Info', 'signs/info.png'); \
        INSERT INTO \"SignClass\" (id,name,icon) values (8, 'Radio installation', 'signs/signal.png'); \
        COMMIT " polaric
fi


