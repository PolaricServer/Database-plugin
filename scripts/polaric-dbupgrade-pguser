#!/bin/bash

   DBNAME=polaric
 USERNAME=polaric



# We have to be the postgres user
if [ $(whoami) != "postgres" ]; then
    echo "ERROR: This script must be run as the 'postgres' user"
    exit 1
fi




VERSION=$(psql -t -c 'select version from "MetaData"' polaric | xargs)

echo "Version is $VERSION"
if ((VERSION < 2)); then
    echo "Upgrading schema to version 2"
    
    psql -t -c "BEGIN;  \
        CREATE TABLE \"ObjectAccess\" ( \
        id  integer REFERENCES \"JsObject\" (id) ON DELETE CASCADE, \
        readonly boolean DEFAULT 'false', \
        userid  varchar(20) ); \
        \
        INSERT INTO \"ObjectAccess\" ( id, userid, readonly) \
        SELECT id, userid, 'false' FROM \"JsObject\"; \
        \
        ALTER TABLE \"JsObject\" DROP COLUMN \"userid\"; \
        ALTER TABLE \"ObjectAccess\" owner TO polaric; \
        UPDATE \"MetaData\" SET version=2; \
        COMMIT " polaric
fi

if ((VERSION < 3)); then
    echo "Upgrading schema to version 3"
    
    psql -t -c "BEGIN;  \
        DROP TABLE \"FileObject\"; \
        UPDATE \"MetaData\" SET version=3; \
        COMMIT " polaric
fi

if ((VERSION < 4)); then
    echo "Upgrading schema to version 4"
    
    psql -t -c "BEGIN;  \
        CREATE TABLE \"TrTags\" ( \
        userid  varchar(20) NOT NULL, \
        tag varchar(20) NOT NULL ); \
        ALTER TABLE \"TrTags\" owner to polaric; \
        CREATE INDEX aprspacket_src_time_idx on \"AprsPacket\" (src, time); \
        UPDATE \"MetaData\" SET version=4; \
        COMMIT " polaric
fi


if ((VERSION < 5)); then
    echo "Upgrading schema to version 5"
    
    psql -t -c "BEGIN; \
        CREATE TABLE \"DbSync\" ( \
         cid varchar NOT NULL, \
         item varchar NOT NULL, \
         ts timestamp without time zone NOT NULL, \
         PRIMARY KEY (cid,item) ); \
        \
        CREATE TABLE \"DbSyncQueue\" ( \
         peer varchar NOT NULL, \
         cid varchar NOT NULL, \
         item varchar NOT NULL, \
         userid varchar, \
         ts timestamp without time zone NOT NULL, \
         cmd varchar, \
         arg text, \
         PRIMARY KEY (cid,item,ts) ); \
        \
        UPDATE \"MetaData\" SET version=5; \
        ALTER TABLE \"DbSync\" owner to polaric; \
        ALTER TABLE \"DbSyncQueue\" owner to polaric; \
        \
        ALTER TABLE \"Signs\" ALTER COLUMN id DROP DEFAULT; \
        ALTER TABLE \"Signs\" ALTER COLUMN id TYPE varchar; \
        DROP SEQUENCE \"Signs_id_seq\"; \
        CREATE SEQUENCE signs_seq START WITH 2000 owned by \"Signs\".id; \
        COMMIT " polaric
fi

if ((VERSION < 6)); then
    echo "Upgrading schema to version 6"
    
    psql -t -c "BEGIN;  \
        CREATE TABLE \"ServerStats\" ( \
        time timestamp WITHOUT TIME ZONE NOT NULL, \
        nclients integer, \
        nloggedin integer, \
        httpreq integer, \
        visits integer, \
        logins integer, \
        posupdates integer, \
        aprsposupdates integer, \
        mapupdates integer ); \
        \
        CREATE TABLE \"ServerStart\" ( \
        time timestamp WITHOUT TIME ZONE NOT NULL ); \
        \
        CREATE VIEW \"ServerStatsPerDay\" AS \
        SELECT date_trunc('day', time) day, sum(httpreq) httpreq, \
           sum(visits) visits, sum(logins) logins, sum(posupdates) posupdates, \
           sum(aprsposupdates) aprsposupdates, sum(mapupdates) mapupdates \
        FROM \"ServerStats\" GROUP BY day; \
        \
        ALTER TABLE \"ServerStats\" owner to polaric; \
        ALTER TABLE \"ServerStart\" owner to polaric; \
        UPDATE \"MetaData\" SET version=6; \
        COMMIT " polaric
fi

if ((VERSION < 6)); then
    echo "Upgrading schema to version 7"
        psql -t -c "BEGIN;  \
        CREATE TABLE \"RtPoint\" ( \
          ident varchar(20) PRIMARY KEY, \
          cls varchar NOT NULL, \
          time timestamp WITHOUT TIME ZONE NOT NULL, \
          descr varchar,  \ 
          obj bytea ); \
        \
        SELECT AddGeometryColumn('RtPoint', 'pos', 4326, 'POINT', 2); \ 
        \
        CREATE TABLE \"SysObject\" ( \
          key varchar(20) PRIMARY KEY, \
          obj bytea ); \
        \
        CREATE INDEX geoindex_rt ON \"RtPoint\" USING  gist (pos); \
        CLUSTER \"RtPoint\" USING geoindex_rt; \
        \
        ALTER TABLE \"RtPoint\" owner to polaric; \
        ALTER TABLE \"SysObject\" owner to polaric; \
        UPDATE \"MetaData\" SET version=6; \
        COMMIT " polaric
fi


NSCLASS=$(psql -t -c 'select count(*) from "SignClass"' polaric | xargs)
if ((NSCLASS == 0)); then
    echo "Adding classes/icons in \"SignClass\""
    echo "NOTE: You may change/add classes in the PostgreSQL database"
    psql -t -c "BEGIN; \
        INSERT INTO \"SignClass\" (id,name,icon) values (0, 'Default', 'signs/point.png'); \
        INSERT INTO \"SignClass\" (id,name,icon) values (1, 'Info', 'signs/info.png'); \
        INSERT INTO \"SignClass\" (id,name,icon) values (8, 'Radio installation', 'signs/signal.png'); \
        COMMIT " polaric
fi


