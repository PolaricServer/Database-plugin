#
# This tells Polaric aprsd to include plugin
#
plugins = no.polaric.aprsdb.DatabasePlugin


#
# URL for database, username and password. 
#
db.url = jdbc:postgresql://localhost:5432/polaric
db.login = polaric
db.passwd = XXX

#
# If this server is not owner of the database, i.e. if
# it is shared with another server, set db.isowner to false
# You may also need to change the url to point to another host
# where the database is located. Default is true. 
#
db.isowner = true

#
# Now we need to tell what APRS traffic to store in 
# the database. 
#
# APRS packets where the channel and source-callsign matches
# with the regular expressions given here, are stored in 
# the database. Default .*
#
db.filter.chan = .*
db.filter.src = (LA|LB|LD|LE)[0-9][A-Z]+

#
# We may disable using the database for signs by setting db.signs.on to false. 
# We may disable storing APRS traffic data (packets and position reports)  
# by setting db.hist.on to false. 
#
db.signs.on = true
db.hist.on = true

#
# Limit how long the APRS traffic data will be stored. The following
# let us set the number of days before packets/reports are deleted from the
# database. 
#
# db.maxage.raw is the lifetime (in days) of raw APRS packets
# db.maxage.report is the lifetime (in days) of APRS position reports. 
#
db.maxage.raw = 30
db.maxage.report = 30

#
# We may set alternative shorter lifetimes for some packets/reports. 
#
# db.maxage2.filter is a SQL subexpression (WHERE ...). Packets/reports where this expression is
#      true will be given maxage2 lifetimes. Fields that could be tested are: src (source callsign) 
#      and channel (source channel name).
#
# db.maxage2.raw is the lifetime (in days) of raw APRS packets. 
# db.maxage2.report is the lifetime (in days) of postion reports. 
# 
db.maxage2.filter = (src ~ '^LD.*')
db.maxage2.report  = 14
db.maxage2.raw = 14

